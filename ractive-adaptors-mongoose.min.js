!function(e,t){"use strict";if("function"==typeof define&&define.amd)define(["ractive","mongoose"],t);else if("undefined"!=typeof module&&module.exports&&"function"==typeof require)t(require("ractive"),require("mongoose"));else{if(!e.Ractive)throw new Error("Could not find Ractive or mongoose! It must be loaded before the ractive-adaptors-mongoose plugin");t(e.Ractive,e.mongoose)}}("undefined"!=typeof window?window:this,function(e,t){"use strict";e.adaptors.mongoose={filter:function(e){return e instanceof t.Document},wrap:function(e,o,i,n){return o.on("validate",this.validateHandler=function(t){e.set(n({errors:t.errors}))}),o.post("set",function(t,o,i){if(this.settle&&this.settle[o])delete this.settle[o];else{var s={};s[o]=i,e.set(n(s))}t()}),{teardown:function(){this.value.removeListener("validate",this.validateHandler)},get:function(){return this.value},set:function(e,t){this.value[e]!=t&&(this.settle=this.settle||{},this.settle[e]=t,this.value[e]=t)},reset:function(e){return debug("reset",e),"object"!=typeof e||e instanceof t.Document?!1:(this.value.set(e),void this.value.$__reset())}}}}});