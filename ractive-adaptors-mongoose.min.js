!function(e,t){"use strict";if("function"==typeof define&&define.amd)define(["ractive","mongoose"],t);else if("undefined"!=typeof module&&module.exports&&"function"==typeof require)t(require("ractive"),require("mongoose"));else{if(!e.Ractive)throw new Error("Could not find Ractive or mongoose! It must be loaded before the ractive-adaptors-mongoose plugin");t(e.Ractive,e.mongoose)}}("undefined"!=typeof window?window:this,function(e,t){"use strict";e.adaptors.mongoose={filter:function(e){return e instanceof t.Document},wrap:function(e,o,n,i){var r=function(t){e.set(i({errors:t.errors}))};o.on("validate",r);var s={};return o.post("set",function(t,o,n){if(s[o])delete s[o];else{s[o]=!0;var r={};r[o]=n,e.set(i(r))}t()}),{teardown:function(){this.value.removeListener("validate",r)},get:function(){return this.value},set:function(e,t){s[e]?delete s[e]:this.value[e]!=t&&(s[e]=!0,this.value[e]=t)},reset:function(e){return"object"!=typeof e||e instanceof t.Document?!1:void this.value.$__reset()}}}}});